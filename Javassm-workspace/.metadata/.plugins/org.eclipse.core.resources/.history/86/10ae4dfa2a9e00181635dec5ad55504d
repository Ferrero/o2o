package com.imooc.o2o.web.shopadmin;
/**
* @author xf
* @version 2018年8月11日 上午10:24:17
*/

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.imooc.o2o.dto.Result;
import com.imooc.o2o.entity.ProductCategory;
import com.imooc.o2o.entity.Shop;
import com.imooc.o2o.enums.ProductCategoryStateEnum;
import com.imooc.o2o.service.ProductCategoryService;

@Controller
@RequestMapping("/shopadmin")
public class ProductCategoryManagementController {
	@Autowired 
	private ProductCategoryService productCategoryService;
	
	@RequestMapping(value="/getproductcategorylist", method = RequestMethod.GET)
	@ResponseBody
/*	public Map<String, Object> getProductCategoryList(){
		Map<String,Object> modelMap = new HashMap<String, Object>();
		ProductCategory productCategory = new ProductCategory();
		productCategory.setShopId(1L);
		try {
			List<ProductCategory> productCategoryList =productCategoryService.getProductCategoryList(productCategory.getShopId());
			modelMap.put("productCategoryList", productCategoryList);
			modelMap.put("success", true);
		}catch(Exception e) {
			modelMap.put("success", false);
		}
		return modelMap;
	}*/
	
	private Result<List<ProductCategory>> getProductCategoryList(HttpServletRequest request){
		// To be removed
		Shop shop = new Shop();
		shop.setShopId(1L);
		request.getSession().setAttribute("current", shop);
		
		Shop currentShop = (Shop) request.getSession().getAttribute("current");
		List<ProductCategory> list = null;
		if(currentShop != null && currentShop.getShopId() > 0) {
			list = productCategoryService.getProductCategoryList(currentShop.getShopId());
			return new Result<List<ProductCategory>>(true, list);
		}else {
			ProductCategoryStateEnum ps = ProductCategoryStateEnum.INNER_ERROR;
			return new Result<List<ProductCategory>>(false, ps.getStateInfo(),ps.getState());
		}
		return null;
		
		
	}
}
